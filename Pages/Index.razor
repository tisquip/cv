@page "/"
@using MyResumeSite.Pages.Components
@using MyResumeSite.Models



<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link kt-pointer @activeMain" @onclick="() => ChangeTab(NavigationTabState.Main)" >Summary</a>
    </li>
    <li class="nav-item">
        <a class="nav-link kt-pointer @activeLiveMatches" @onclick="() => ChangeTab(NavigationTabState.LiveMatches)" >All Live Matches</a>
    </li>
    <li class="nav-item">
        <a class="nav-link kt-pointer @activeStandings" @onclick="() => ChangeTab(NavigationTabState.Standings)" >Standings</a>
    </li>
    <li class="nav-item">
        <a class="nav-link kt-pointer @activeSchedule" @onclick="() => ChangeTab(NavigationTabState.Schedule)" >Schedule</a>
    </li>
</ul>

<div class="p-3">
    @switch (_currentTab)
    {
        case NavigationTabState.Main:
            <HybridComponent />
            break;
        case NavigationTabState.LiveMatches:
            <LiveMatchesComponent />
            break;
        case NavigationTabState.Standings:
            <StandingsComponent />
            break;
        case NavigationTabState.Schedule:
            <SheduleComponent />
            break;
        default:
            <HybridComponent />
            break;
    }
</div>




@code{
    static string active = "active";
    string activeMain = active;
    string activeLiveMatches = "";
    string activeStandings = "";
    string activeSchedule = "";

    NavigationTabState _currentTab = NavigationTabState.Main;

    void ChangeTab(NavigationTabState navigationTabState)
    {
        _currentTab = navigationTabState;
        RemoveAllActive();
        switch (_currentTab)
        {
            case NavigationTabState.Main:
                activeMain = active;
                break;
            case NavigationTabState.LiveMatches:
                activeLiveMatches = active;
                break;
            case NavigationTabState.Standings:
                activeStandings = active;
                break;
            case NavigationTabState.Schedule:
                activeSchedule = active;
                break;
            default:
                activeMain = active;
                break;
        }
    }

    void RemoveAllActive()
    {
        activeMain = "";
        activeLiveMatches = "";
        activeStandings = "";
        activeSchedule = "";
    }
}